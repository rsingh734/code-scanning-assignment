name: Bandit Python Security Scan (Direct Install)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# CRITICAL: Grant permissions for the token to read code and write security results
permissions:
  contents: read
  security-events: write

jobs:
  bandit_scan:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout Code (Using Generic Tag)
        # Use a well-known, foundational action to retrieve your code
        uses: actions/checkout@v3 

      - name: üêç Set up Python
        # This is a standard GitHub action and should resolve correctly
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: ‚öôÔ∏è Install Bandit and SARIF Converter
        # Install the tools directly using pip
        run: |
          pip install bandit
          pip install sarif-tools # Tool to convert Bandit output to SARIF format

      - name: üõ°Ô∏è Run Bandit Scan and Convert to SARIF
        # 1. Run Bandit scan, outputting JSON to a file
        # 2. Convert the JSON file to SARIF format (required for GitHub Security tab)
        run: |
          echo "Running Bandit scan..."
          bandit -r . -f json -o bandit-results.json --fail-on-error || true
          
          echo "Converting results to SARIF..."
          sarif-converter -i bandit-results.json -o bandit.sarif || true
          
          # Optional: Print results for debugging
          cat bandit.sarif

      - name: üìù Upload SARIF Report
        # Fallback to the explicit SHA of the SARIF uploader if v2/v3 fails
        uses: github/code-scanning-action/upload-sarif@2f7f1d8213702e86b97621c08d132470f1a6030b
        with:
          sarif_file: bandit.sarif
